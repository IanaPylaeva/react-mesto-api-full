{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\dev\\\\react-mesto-api-full\\\\frontend\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport { api } from \"../utils/api.js\";\nimport * as auth from \"../utils/auth.js\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport ProtectedRoute from \"./ProtectedRoute.js\";\nimport InfoTooltip from './InfoTooltip.js';\nimport success from '../images/success.svg';\nimport fail from '../images/fail.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultSelectedCard = {\n  name: '',\n  link: ''\n};\n\nfunction App() {\n  _s();\n\n  const navigate = useNavigate();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(defaultSelectedCard);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState(null);\n  const [popupImage, setPopupImage] = React.useState('');\n  const [popupTitle, setPopupTitle] = React.useState('');\n  const [infoTooltip, setInfoTooltip] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  /* Регистрация */\n\n  function register(email, password) {\n    auth.registerUser(email, password).then(() => {\n      setPopupImage(success);\n      setPopupTitle(\"Вы успешно зарегистрировались!\");\n      navigate(\"/sign-in\");\n    }).catch(() => {\n      setPopupImage(fail);\n      setPopupTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n    }).finally(handleInfoTooltip);\n  }\n  /* Вход */\n\n\n  function logIn(email, password) {\n    auth.loginUser(email, password).then(res => {\n      localStorage.setItem('jwt', res.token);\n      setIsLoggedIn(true);\n      setEmail(email);\n      navigate(\"/\");\n    }).catch(() => {\n      setPopupImage(fail);\n      setPopupTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      handleInfoTooltip();\n    });\n  }\n  /* Сохранить токен в локальном хранилище, установить имейл */\n\n\n  useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.getContent(jwt).then(res => {\n        if (res) {\n          setIsLoggedIn(true);\n          setEmail(res.data.email);\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate(\"/\");\n    }\n  }, [isLoggedIn, navigate]);\n  /* Одновременное получение данных пользователя и карточек */\n\n  useEffect(() => {\n    Promise.all([api.getUserData(), api.getInitialCards()]).then(res => {\n      setCurrentUser(res[0]);\n      setCards(res[1]);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  }\n\n  function handleInfoTooltip() {\n    setInfoTooltip(true);\n  }\n  /* Сброс всех параметров после logout */\n\n\n  function handleLogOut() {\n    setIsLoggedIn(false);\n    setEmail(null);\n    navigate(\"/sign-in\");\n    localStorage.removeItem(\"jwt\"); //удаление токена из локального хранилища\n  }\n  /* Ставим и убираем лайк на карточке */\n\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\n\n    const action = !isLiked ? api.putLike(card._id) : api.deleteLike(card._id);\n    action.then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n  /* Удаляет карточку */\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(items => items.filter(i => i._id !== card._id));\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n  /* Обновляет данные пользователя */\n\n\n  function handleUpdateUser(data) {\n    api.patchUserInfo(data).then(newUser => {\n      setCurrentUser(newUser);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n  /* Обновляет аватар */\n\n\n  function handleAvatarUpdate(data) {\n    api.patchUserAvatar(data).then(newAvatar => {\n      setCurrentUser(newAvatar);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n  /* Добавляет карточку */\n\n\n  function handleAddPlaceSubmit(card) {\n    api.postCard(card).then(data => {\n      setCards([data, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n  /* Закрытие всех попапов */\n\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(defaultSelectedCard);\n    setInfoTooltip(false);\n    setIsImagePopupOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        mail: email,\n        onClick: handleLogOut,\n        route: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            component: Main,\n            isLogged: isLoggedIn,\n            onCardClick: handleCardClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            cards: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            register: register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            logIn: logIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddNewPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleAvatarUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups,\n        isOpen: isImagePopupOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        image: popupImage,\n        title: popupTitle,\n        isOpen: infoTooltip,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5o8RdmsOChTZBbiAbiTr/8ez+Y0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/пользователь/dev/react-mesto-api-full/frontend/src/components/App.js"],"names":["React","useEffect","Routes","Route","Navigate","useNavigate","api","auth","Header","Main","Footer","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","CurrentUserContext","Login","Register","ProtectedRoute","InfoTooltip","success","fail","defaultSelectedCard","name","link","App","navigate","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","isLoggedIn","setIsLoggedIn","email","setEmail","popupImage","setPopupImage","popupTitle","setPopupTitle","infoTooltip","setInfoTooltip","isImagePopupOpen","setIsImagePopupOpen","register","password","registerUser","then","catch","finally","handleInfoTooltip","logIn","loginUser","res","localStorage","setItem","token","jwt","getItem","getContent","data","err","console","error","Promise","all","getUserData","getInitialCards","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","handleLogOut","removeItem","handleCardLike","isLiked","likes","some","i","_id","action","putLike","deleteLike","newCard","state","map","c","handleCardDelete","deleteCard","items","filter","handleUpdateUser","patchUserInfo","newUser","closeAllPopups","handleAvatarUpdate","patchUserAvatar","newAvatar","handleAddPlaceSubmit","postCard"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\r\nimport {api} from \"../utils/api.js\";\r\nimport * as auth from \"../utils/auth.js\";\r\nimport Header from \"./Header.js\";\r\nimport Main from \"./Main.js\";\r\nimport Footer from \"./Footer.js\";\r\nimport ImagePopup from \"./ImagePopup.js\";\r\nimport EditProfilePopup from \"./EditProfilePopup.js\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\r\nimport AddPlacePopup from \"./AddPlacePopup.js\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\nimport Login from \"./Login.js\";\r\nimport Register from \"./Register.js\";\r\nimport ProtectedRoute from \"./ProtectedRoute.js\";\r\nimport InfoTooltip from './InfoTooltip.js';\r\nimport success from '../images/success.svg';\r\nimport fail from '../images/fail.svg';\r\n\r\nconst defaultSelectedCard = { name: '', link: '' };\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState(defaultSelectedCard);\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\r\n  const [email, setEmail] = React.useState(null);\r\n  const [popupImage, setPopupImage] = React.useState('');\r\n  const [popupTitle, setPopupTitle] = React.useState('');\r\n  const [infoTooltip, setInfoTooltip] = React.useState(false);\r\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\r\n\r\n  /* Регистрация */\r\n  function register(email, password) {\r\n    auth.registerUser(email, password).then(() => {\r\n      setPopupImage(success);\r\n      setPopupTitle(\"Вы успешно зарегистрировались!\");\r\n      navigate(\"/sign-in\");\r\n    }).catch(() => {\r\n      setPopupImage(fail);\r\n      setPopupTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\r\n    }).finally(handleInfoTooltip);\r\n  }\r\n\r\n  /* Вход */\r\n  function logIn(email, password) {\r\n    auth.loginUser(email, password).then((res) => {\r\n      localStorage.setItem('jwt', res.token);\r\n      setIsLoggedIn(true);\r\n      setEmail(email);\r\n      navigate(\"/\");\r\n    }).catch(() => {\r\n      setPopupImage(fail);\r\n      setPopupTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\r\n      handleInfoTooltip();\r\n    })\r\n  }\r\n\r\n  /* Сохранить токен в локальном хранилище, установить имейл */\r\n  useEffect(() => {\r\n    const jwt = localStorage.getItem('jwt');\r\n    if (jwt) {\r\n      auth.getContent(jwt).then((res) => {\r\n        if (res) {\r\n          setIsLoggedIn(true);\r\n          setEmail(res.data.email);\r\n        }\r\n      }).catch((err) => {\r\n        console.error(err);\r\n      })\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [isLoggedIn, navigate]);\r\n  \r\n  /* Одновременное получение данных пользователя и карточек */\r\n  useEffect(() => { \r\n    Promise.all([api.getUserData(), api.getInitialCards()])\r\n      .then((res) => {\r\n        setCurrentUser(res[0]);\r\n        setCards(res[1]);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n    }, []);\r\n\r\n  function handleEditProfileClick(){\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n  function handleAddPlaceClick(){\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n  function handleEditAvatarClick(){\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  function handleCardClick(card){\r\n    setSelectedCard(card);\r\n    setIsImagePopupOpen(true);\r\n  }\r\n  function handleInfoTooltip(){\r\n    setInfoTooltip(true);\r\n  }\r\n\r\n  /* Сброс всех параметров после logout */\r\n  function handleLogOut() {\r\n    setIsLoggedIn(false);\r\n    setEmail(null);\r\n    navigate(\"/sign-in\");\r\n    localStorage.removeItem(\"jwt\");//удаление токена из локального хранилища\r\n  }\r\n\r\n  /* Ставим и убираем лайк на карточке */\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);// Снова проверяем, есть ли уже лайк на этой карточке\r\n    \r\n    const action = !isLiked ? api.putLike(card._id) : api.deleteLike(card._id);\r\n    action\r\n      .then((newCard) => {\r\n        setCards((state) => \r\n        state.map((c) => c._id === card._id ? newCard : c))\r\n      }).catch((err) => {\r\n        console.error(err)\r\n      });    \r\n  }\r\n\r\n  /* Удаляет карточку */\r\n  function handleCardDelete(card) {\r\n    api.deleteCard(card._id)\r\n      .then (() => {\r\n        setCards(items => items.filter((i) => i._id !== card._id));\r\n      }).catch((err) => {\r\n        console.error(err);\r\n      })\r\n  }\r\n\r\n  /* Обновляет данные пользователя */\r\n  function handleUpdateUser(data) {\r\n    api.patchUserInfo(data)\r\n      .then(newUser => {\r\n        setCurrentUser(newUser);\r\n        closeAllPopups();\r\n      }).catch((err) => {\r\n        console.error(err);\r\n      })\r\n  }\r\n\r\n  /* Обновляет аватар */\r\n  function handleAvatarUpdate(data) {\r\n    api.patchUserAvatar(data)\r\n      .then(newAvatar => {\r\n        setCurrentUser(newAvatar);\r\n        closeAllPopups();\r\n      }).catch((err) => {\r\n        console.error(err);\r\n      })\r\n  }\r\n\r\n  /* Добавляет карточку */\r\n  function handleAddPlaceSubmit(card) {\r\n    api.postCard(card)\r\n    .then(data => {\r\n      setCards([data, ...cards]);\r\n      closeAllPopups();\r\n    }).catch((err) => {\r\n      console.error(err);\r\n    })\r\n  }\r\n\r\n  /* Закрытие всех попапов */\r\n  function closeAllPopups() {\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setSelectedCard(defaultSelectedCard);\r\n    setInfoTooltip(false);\r\n    setIsImagePopupOpen(false);\r\n  }\r\n  \r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n    <div className=\"page\">\r\n      <Header mail={email} onClick={handleLogOut} route=\"\" />    \r\n      <Routes>\r\n        <Route exact path=\"/\" element={\r\n          <ProtectedRoute\r\n            component={Main}\r\n            isLogged={isLoggedIn}\r\n            onCardClick={handleCardClick}\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={handleCardDelete}\r\n            cards={cards}\r\n          ></ProtectedRoute> \r\n        }></Route> \r\n        <Route path=\"/sign-up\" element={\r\n          <Register register={register} />\r\n        }></Route>\r\n        <Route path=\"/sign-in\" element={\r\n          <Login logIn={logIn} />\r\n        }></Route>\r\n        <Route path=\"*\" element={\r\n          <Navigate to=\"/\" />\r\n        }></Route>\r\n      </Routes>\r\n      <Footer />\r\n      <EditProfilePopup\r\n        isOpen={isEditProfilePopupOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateUser={handleUpdateUser}\r\n      />\r\n      <AddPlacePopup\r\n        isOpen={isAddPlacePopupOpen}\r\n        onClose={closeAllPopups}\r\n        onAddNewPlace={handleAddPlaceSubmit}\r\n      />      \r\n      <EditAvatarPopup\r\n        isOpen={isEditAvatarPopupOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateAvatar={handleAvatarUpdate}\r\n      />      \r\n      <ImagePopup\r\n        card={selectedCard}\r\n        onClose={closeAllPopups}\r\n        isOpen={isImagePopupOpen}\r\n      />\r\n      <InfoTooltip\r\n        image={popupImage}\r\n        title={popupTitle}\r\n        isOpen={infoTooltip}\r\n        onClose={closeAllPopups}\r\n      />\r\n    </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}