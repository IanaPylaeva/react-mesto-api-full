{"ast":null,"code":"import _slicedToArray from\"C:/Users/\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C/dev/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import PopupWithForm from\"./PopupWithForm\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AddPlacePopup(props){var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),placeName=_React$useState2[0],setPlaceName=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),placeLink=_React$useState4[0],setPlaceLink=_React$useState4[1];function handlePlaceNameAdd(evt){setPlaceName(evt.target.value);}function handlePlaceLinkAdd(evt){setPlaceLink(evt.target.value);}/* Отправляет форму*/function handleSubmit(evt){evt.preventDefault();// Запрещаем браузеру переходить по адресу формы - страница не перезагружается\n// Передаём значения управляемых компонентов во внешний обработчик\nprops.onAddNewPlace({name:placeName,link:placeLink});}// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\nReact.useEffect(function(){if(props.isOpen){setPlaceName('');setPlaceLink('');}},[props.isOpen]);return/*#__PURE__*/_jsx(PopupWithForm,{isOpen:props.isOpen,popupType:\"card-add\",title:\"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",popupNameForm:\"addForm\",submitButtonText:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",onClose:props.onClose,onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup__input-container\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"popup__text_name\",type:\"text\",className:\"popup__text popup__text_type_place\",name:\"name\",placeholder:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",minLength:\"2\",maxLength:\"30\",value:placeName,onChange:handlePlaceNameAdd,required:true}),/*#__PURE__*/_jsx(\"span\",{className:\"popup__text-error popup__text_name-error\"}),/*#__PURE__*/_jsx(\"input\",{id:\"popup__text_link\",type:\"url\",className:\"popup__text popup__text_type_link\",name:\"link\",placeholder:\"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",value:placeLink,onChange:handlePlaceLinkAdd,required:true}),/*#__PURE__*/_jsx(\"span\",{className:\"popup__text-error popup__text_link-error\"})]})});}export default AddPlacePopup;","map":{"version":3,"sources":["C:/Users/пользователь/dev/react-mesto-api-full/frontend/src/components/AddPlacePopup.js"],"names":["React","PopupWithForm","AddPlacePopup","props","useState","placeName","setPlaceName","placeLink","setPlaceLink","handlePlaceNameAdd","evt","target","value","handlePlaceLinkAdd","handleSubmit","preventDefault","onAddNewPlace","name","link","useEffect","isOpen","onClose"],"mappings":"yMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,C,wFAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC5B,oBAAkCH,KAAK,CAACI,QAAN,CAAe,EAAf,CAAlC,oDAAOC,SAAP,qBAAkBC,YAAlB,qBACA,qBAAkCN,KAAK,CAACI,QAAN,CAAe,EAAf,CAAlC,qDAAOG,SAAP,qBAAkBC,YAAlB,qBAEA,QAASC,CAAAA,kBAAT,CAA4BC,GAA5B,CAAiC,CAC/BJ,YAAY,CAACI,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAZ,CACD,CAED,QAASC,CAAAA,kBAAT,CAA4BH,GAA5B,CAAiC,CAC/BF,YAAY,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAZ,CACD,CAED,qBACA,QAASE,CAAAA,YAAT,CAAsBJ,GAAtB,CAA2B,CACzBA,GAAG,CAACK,cAAJ,GAAqB;AAErB;AACAZ,KAAK,CAACa,aAAN,CAAoB,CAClBC,IAAI,CAAEZ,SADY,CAElBa,IAAI,CAAEX,SAFY,CAApB,EAID,CAED;AACA;AACAP,KAAK,CAACmB,SAAN,CAAgB,UAAM,CACpB,GAAGhB,KAAK,CAACiB,MAAT,CAAiB,CACfd,YAAY,CAAC,EAAD,CAAZ,CACAE,YAAY,CAAC,EAAD,CAAZ,CACD,CACF,CALD,CAKG,CAACL,KAAK,CAACiB,MAAP,CALH,EAOA,mBACE,KAAC,aAAD,EACE,MAAM,CAAEjB,KAAK,CAACiB,MADhB,CAEE,SAAS,CAAC,UAFZ,CAGE,KAAK,CAAC,+DAHR,CAIE,aAAa,CAAC,SAJhB,CAKE,gBAAgB,CAAC,4CALnB,CAME,OAAO,CAAEjB,KAAK,CAACkB,OANjB,CAOE,QAAQ,CAAEP,YAPZ,uBASE,aAAK,SAAS,CAAC,wBAAf,wBACE,cACE,EAAE,CAAC,kBADL,CAEE,IAAI,CAAC,MAFP,CAGE,SAAS,CAAC,oCAHZ,CAIE,IAAI,CAAC,MAJP,CAKE,WAAW,CAAC,kDALd,CAME,SAAS,CAAC,GANZ,CAOE,SAAS,CAAC,IAPZ,CAQE,KAAK,CAAET,SART,CASE,QAAQ,CAAEI,kBATZ,CAUE,QAAQ,KAVV,EADF,cAaE,aAAM,SAAS,CAAC,0CAAhB,EAbF,cAcE,cACE,EAAE,CAAC,kBADL,CAEE,IAAI,CAAC,KAFP,CAGE,SAAS,CAAC,mCAHZ,CAIE,IAAI,CAAC,MAJP,CAKE,WAAW,CAAC,oGALd,CAME,KAAK,CAAEF,SANT,CAOE,QAAQ,CAAEM,kBAPZ,CAQE,QAAQ,KARV,EAdF,cAwBE,aAAM,SAAS,CAAC,0CAAhB,EAxBF,GATF,EADF,CAsCD,CAED,cAAeX,CAAAA,aAAf","sourcesContent":["import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [placeName, setPlaceName] = React.useState('');\r\n  const [placeLink, setPlaceLink] = React.useState('');\r\n\r\n  function handlePlaceNameAdd(evt) {\r\n    setPlaceName(evt.target.value);\r\n  }\r\n\r\n  function handlePlaceLinkAdd(evt) {\r\n    setPlaceLink(evt.target.value);\r\n  }\r\n  \r\n  /* Отправляет форму*/\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();// Запрещаем браузеру переходить по адресу формы - страница не перезагружается\r\n    \r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onAddNewPlace({\r\n      name: placeName,\r\n      link: placeLink\r\n    })\r\n  }\r\n  \r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    if(props.isOpen) {\r\n      setPlaceName('');\r\n      setPlaceLink('');\r\n    }\r\n  }, [props.isOpen]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={props.isOpen}\r\n      popupType=\"card-add\"\r\n      title=\"Новое место\"\r\n      popupNameForm=\"addForm\"\r\n      submitButtonText=\"Создать\"\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <div className=\"popup__input-container\">\r\n        <input\r\n          id=\"popup__text_name\"\r\n          type=\"text\"\r\n          className=\"popup__text popup__text_type_place\"\r\n          name=\"name\"\r\n          placeholder=\"Название\"\r\n          minLength=\"2\" \r\n          maxLength=\"30\"\r\n          value={placeName}\r\n          onChange={handlePlaceNameAdd}\r\n          required\r\n        />\r\n        <span className=\"popup__text-error popup__text_name-error\"></span>\r\n        <input\r\n          id=\"popup__text_link\"\r\n          type=\"url\"\r\n          className=\"popup__text popup__text_type_link\"\r\n          name=\"link\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          value={placeLink}\r\n          onChange={handlePlaceLinkAdd}\r\n          required\r\n        />\r\n        <span className=\"popup__text-error popup__text_link-error\"></span>\r\n      </div>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;"]},"metadata":{},"sourceType":"module"}