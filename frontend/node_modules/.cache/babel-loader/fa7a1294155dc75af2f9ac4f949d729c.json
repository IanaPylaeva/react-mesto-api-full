{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\dev\\\\react-mesto-api-full\\\\frontend\\\\src\\\\components\\\\EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(props) {\n  _s();\n\n  const ref = React.useRef('');\n\n  function handleSubmit(evt) {\n    evt.preventDefault(); // Запрещаем браузеру переходить по адресу формы - не перезагружается\n    // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onUpdateAvatar({\n      avatar: ref.current.value\n    });\n  }\n\n  React.useEffect(() => {\n    ref.current.value = '';\n  }, [props.isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: props.isOpen,\n    popupType: \"update-avatar\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    popupNameForm: \"avatarForm\",\n    submitButtonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref,\n        id: \"popup__text-error_avatar\",\n        type: \"url\",\n        className: \"popup__text popup__text_type_avatar\",\n        name: \"avatar\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__text-error popup__text-error_avatar-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["C:/Users/пользователь/dev/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js"],"names":["React","PopupWithForm","EditAvatarPopup","props","ref","useRef","handleSubmit","evt","preventDefault","onUpdateAvatar","avatar","current","value","useEffect","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa,EAAb,CAAZ;;AAEA,WAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzBA,IAAAA,GAAG,CAACC,cAAJ,GADyB,CACJ;AAErB;;AACAL,IAAAA,KAAK,CAACM,cAAN,CAAqB;AACnBC,MAAAA,MAAM,EAAEN,GAAG,CAACO,OAAJ,CAAYC;AADD,KAArB;AAGD;;AAEDZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBT,IAAAA,GAAG,CAACO,OAAJ,CAAYC,KAAZ,GAAoB,EAApB;AACD,GAFD,EAEG,CAACT,KAAK,CAACW,MAAP,CAFH;AAIA,sBACE,QAAC,aAAD;AACE,IAAA,MAAM,EAAEX,KAAK,CAACW,MADhB;AAEE,IAAA,SAAS,EAAC,eAFZ;AAGE,IAAA,KAAK,EAAC,uFAHR;AAIE,IAAA,aAAa,EAAC,YAJhB;AAKE,IAAA,gBAAgB,EAAC,wDALnB;AAME,IAAA,OAAO,EAAEX,KAAK,CAACY,OANjB;AAOE,IAAA,QAAQ,EAAET,YAPZ;AAAA,2BASE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACE;AACE,QAAA,GAAG,EAAEF,GADP;AAEE,QAAA,EAAE,EAAC,0BAFL;AAGE,QAAA,IAAI,EAAC,KAHP;AAIE,QAAA,SAAS,EAAC,qCAJZ;AAKE,QAAA,IAAI,EAAC,QALP;AAME,QAAA,WAAW,EAAC,sHANd;AAOE,QAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAxCQF,e;;KAAAA,e;AA0CT,eAAeA,eAAf","sourcesContent":["import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const ref = React.useRef('');\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();// Запрещаем браузеру переходить по адресу формы - не перезагружается\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateAvatar({\r\n      avatar: ref.current.value\r\n    });\r\n  }\r\n \r\n  React.useEffect(() => {\r\n    ref.current.value = '';\r\n  }, [props.isOpen]);\r\n\r\n  return(\r\n    <PopupWithForm\r\n      isOpen={props.isOpen}\r\n      popupType=\"update-avatar\"\r\n      title=\"Обновить аватар\"\r\n      popupNameForm=\"avatarForm\"\r\n      submitButtonText=\"Сохранить\"\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <div className=\"popup__input-container\">\r\n        <input\r\n          ref={ref}\r\n          id=\"popup__text-error_avatar\"\r\n          type=\"url\"\r\n          className=\"popup__text popup__text_type_avatar\"\r\n          name=\"avatar\"\r\n          placeholder=\"Ссылка на изображение\"\r\n          required\r\n        />\r\n        <span className=\"popup__text-error popup__text-error_avatar-error\"></span>\r\n      </div>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;"]},"metadata":{},"sourceType":"module"}