{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\dev\\\\react-mesto-api-full\\\\frontend\\\\src\\\\components\\\\AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddPlacePopup(props) {\n  _s();\n\n  const [placeName, setPlaceName] = React.useState('');\n  const [placeLink, setPlaceLink] = React.useState('');\n\n  function handlePlaceNameAdd(evt) {\n    setPlaceName(evt.target.value);\n  }\n\n  function handlePlaceLinkAdd(evt) {\n    setPlaceLink(evt.target.value);\n  }\n  /* Отправляет форму*/\n\n\n  function handleSubmit(evt) {\n    evt.preventDefault(); // Запрещаем браузеру переходить по адресу формы - страница не перезагружается\n    // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onAddNewPlace({\n      name: placeName,\n      link: placeLink\n    });\n  } // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n\n\n  React.useEffect(() => {\n    if (props.isOpen) {\n      setPlaceName('');\n      setPlaceLink('');\n    }\n  }, [props.isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: props.isOpen,\n    popupType: \"card-add\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    popupNameForm: \"addForm\",\n    submitButtonText: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"popup__text_name\",\n        type: \"text\",\n        className: \"popup__text popup__text_type_place\",\n        name: \"name\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        minLength: \"2\",\n        maxLength: \"30\",\n        value: placeName,\n        onChange: handlePlaceNameAdd,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__text-error popup__text_name-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"popup__text_link\",\n        type: \"url\",\n        className: \"popup__text popup__text_type_link\",\n        name: \"link\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        value: placeLink,\n        onChange: handlePlaceLinkAdd,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__text-error popup__text_link-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddPlacePopup, \"kQJRc2Ydm7kk3MXfJMhKy4xXKGc=\");\n\n_c = AddPlacePopup;\nexport default AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["C:/Users/пользователь/dev/react-mesto-api-full/frontend/src/components/AddPlacePopup.js"],"names":["React","PopupWithForm","AddPlacePopup","props","placeName","setPlaceName","useState","placeLink","setPlaceLink","handlePlaceNameAdd","evt","target","value","handlePlaceLinkAdd","handleSubmit","preventDefault","onAddNewPlace","name","link","useEffect","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;;AAEA,WAASG,kBAAT,CAA4BC,GAA5B,EAAiC;AAC/BL,IAAAA,YAAY,CAACK,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAZ;AACD;;AAED,WAASC,kBAAT,CAA4BH,GAA5B,EAAiC;AAC/BF,IAAAA,YAAY,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAZ;AACD;AAED;;;AACA,WAASE,YAAT,CAAsBJ,GAAtB,EAA2B;AACzBA,IAAAA,GAAG,CAACK,cAAJ,GADyB,CACJ;AAErB;;AACAZ,IAAAA,KAAK,CAACa,aAAN,CAAoB;AAClBC,MAAAA,IAAI,EAAEb,SADY;AAElBc,MAAAA,IAAI,EAAEX;AAFY,KAApB;AAID,GArB2B,CAuB5B;AACA;;;AACAP,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpB,QAAGhB,KAAK,CAACiB,MAAT,EAAiB;AACff,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAG,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,GALD,EAKG,CAACL,KAAK,CAACiB,MAAP,CALH;AAOA,sBACE,QAAC,aAAD;AACE,IAAA,MAAM,EAAEjB,KAAK,CAACiB,MADhB;AAEE,IAAA,SAAS,EAAC,UAFZ;AAGE,IAAA,KAAK,EAAC,+DAHR;AAIE,IAAA,aAAa,EAAC,SAJhB;AAKE,IAAA,gBAAgB,EAAC,4CALnB;AAME,IAAA,OAAO,EAAEjB,KAAK,CAACkB,OANjB;AAOE,IAAA,QAAQ,EAAEP,YAPZ;AAAA,2BASE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAC,oCAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,WAAW,EAAC,kDALd;AAME,QAAA,SAAS,EAAC,GANZ;AAOE,QAAA,SAAS,EAAC,IAPZ;AAQE,QAAA,KAAK,EAAEV,SART;AASE,QAAA,QAAQ,EAAEK,kBATZ;AAUE,QAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,SAAS,EAAC,mCAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,WAAW,EAAC,oGALd;AAME,QAAA,KAAK,EAAEF,SANT;AAOE,QAAA,QAAQ,EAAEM,kBAPZ;AAQE,QAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,cAdF,eAwBE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAtEQX,a;;KAAAA,a;AAwET,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [placeName, setPlaceName] = React.useState('');\r\n  const [placeLink, setPlaceLink] = React.useState('');\r\n\r\n  function handlePlaceNameAdd(evt) {\r\n    setPlaceName(evt.target.value);\r\n  }\r\n\r\n  function handlePlaceLinkAdd(evt) {\r\n    setPlaceLink(evt.target.value);\r\n  }\r\n  \r\n  /* Отправляет форму*/\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();// Запрещаем браузеру переходить по адресу формы - страница не перезагружается\r\n    \r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onAddNewPlace({\r\n      name: placeName,\r\n      link: placeLink\r\n    })\r\n  }\r\n  \r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    if(props.isOpen) {\r\n      setPlaceName('');\r\n      setPlaceLink('');\r\n    }\r\n  }, [props.isOpen]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={props.isOpen}\r\n      popupType=\"card-add\"\r\n      title=\"Новое место\"\r\n      popupNameForm=\"addForm\"\r\n      submitButtonText=\"Создать\"\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <div className=\"popup__input-container\">\r\n        <input\r\n          id=\"popup__text_name\"\r\n          type=\"text\"\r\n          className=\"popup__text popup__text_type_place\"\r\n          name=\"name\"\r\n          placeholder=\"Название\"\r\n          minLength=\"2\" \r\n          maxLength=\"30\"\r\n          value={placeName}\r\n          onChange={handlePlaceNameAdd}\r\n          required\r\n        />\r\n        <span className=\"popup__text-error popup__text_name-error\"></span>\r\n        <input\r\n          id=\"popup__text_link\"\r\n          type=\"url\"\r\n          className=\"popup__text popup__text_type_link\"\r\n          name=\"link\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          value={placeLink}\r\n          onChange={handlePlaceLinkAdd}\r\n          required\r\n        />\r\n        <span className=\"popup__text-error popup__text_link-error\"></span>\r\n      </div>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;"]},"metadata":{},"sourceType":"module"}