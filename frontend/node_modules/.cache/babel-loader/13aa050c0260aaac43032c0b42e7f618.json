{"ast":null,"code":"import _objectSpread from\"C:/Users/\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C/dev/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _classCallCheck from\"C:/Users/\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C/dev/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C/dev/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._serverUrl=options.serverUrl;this._headers=options.headers;}_createClass(Api,[{key:\"_checkCorrectness\",value:/* Ответ от сервера всегда проверяется на корректность */function _checkCorrectness(res){if(res.ok){return res.json();}// если ошибка, отклоняем промис\nreturn Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"_getHeaders\",value:function _getHeaders(){return _objectSpread({authorization:\"Bearer \".concat(localStorage.getItem('jwt'))},this._headers);}/* Получить карточки с сервера */},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._serverUrl,\"/cards\"),{headers:this._getHeaders()}).then(this._checkCorrectness);}},{key:\"getUserData\",value:/* Получить информацию о пользователе с сервера */function getUserData(){return fetch(\"\".concat(this._serverUrl,\"/users/me\"),{headers:this._getHeaders()}).then(this._checkCorrectness);}},{key:\"patchUserInfo\",value:/* Установить обновленные данные пользователя на сервер */function patchUserInfo(data){return fetch(\"\".concat(this._serverUrl,\"/users/me\"),{method:'PATCH',headers:this._getHeaders(),body:JSON.stringify({name:data.name,about:data.about})}).then(this._checkCorrectness);}},{key:\"patchUserAvatar\",value:/* Установить аватар пользователя на сервере */function patchUserAvatar(data){return fetch(\"\".concat(this._serverUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._getHeaders(),body:JSON.stringify({avatar:data.avatar})}).then(this._checkCorrectness);}},{key:\"postCard\",value:/* Отправить данные новой карточки на сервер */function postCard(card){return fetch(\"\".concat(this._serverUrl,\"/cards\"),{method:'POST',headers:this._getHeaders(),body:JSON.stringify({name:card.name,link:card.link})}).then(this._checkCorrectness);}},{key:\"deleteCard\",value:/* Удалить карточку с сервера */function deleteCard(id){return fetch(\"\".concat(this._serverUrl,\"/cards/\").concat(id),{method:'DELETE',headers:this._getHeaders()}).then(this._checkCorrectness);}},{key:\"putLike\",value:/* Поставить лайк */function putLike(id){return fetch(\"\".concat(this._serverUrl,\"/cards/\").concat(id,\"/likes\"),{method:'PUT',headers:this._getHeaders()}).then(this._checkCorrectness);}},{key:\"deleteLike\",value:/* Удалить лайк */function deleteLike(id){return fetch(\"\".concat(this._serverUrl,\"/cards/\").concat(id,\"/likes\"),{method:'DELETE',headers:this._getHeaders()}).then(this._checkCorrectness);}}]);return Api;}();;var api=new Api({serverUrl:'https://domain.ianapylaeva.bcknd.nomoredomains.xyz',headers:{'Accept':'application/json','Content-Type':'application/json'}});export default api;","map":{"version":3,"sources":["C:/Users/пользователь/dev/react-mesto-api-full/frontend/src/utils/api.js"],"names":["Api","options","_serverUrl","serverUrl","_headers","headers","res","ok","json","Promise","reject","status","authorization","localStorage","getItem","fetch","_getHeaders","then","_checkCorrectness","data","method","body","JSON","stringify","name","about","avatar","card","link","id","api"],"mappings":"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","sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._serverUrl = options.serverUrl;\r\n    this._headers = options.headers;\r\n  };\r\n\r\n  /* Ответ от сервера всегда проверяется на корректность */\r\n  _checkCorrectness(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    // если ошибка, отклоняем промис\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  };\r\n  \r\n  _getHeaders(){\r\n    return {authorization: `Bearer ${localStorage.getItem('jwt')}`, ...this._headers}\r\n  }\r\n  \r\n\r\n  /* Получить карточки с сервера */\r\n  getInitialCards() {\r\n    return fetch(`${this._serverUrl}/cards`, {\r\n      headers: this._getHeaders(),\r\n    })\r\n    .then(this._checkCorrectness);\r\n  };\r\n \r\n  /* Получить информацию о пользователе с сервера */\r\n  getUserData() {\r\n    return fetch(`${this._serverUrl}/users/me`, {\r\n      headers: this._getHeaders(),\r\n    })\r\n    .then(this._checkCorrectness);\r\n  };\r\n\r\n  /* Установить обновленные данные пользователя на сервер */\r\n  patchUserInfo(data) {\r\n    return fetch(`${this._serverUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._getHeaders(),\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about,\r\n      })\r\n    })\r\n    .then(this._checkCorrectness);\r\n  };\r\n\r\n  /* Установить аватар пользователя на сервере */\r\n  patchUserAvatar(data) {\r\n    return fetch(`${this._serverUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._getHeaders(),\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      })\r\n    })\r\n    .then(this._checkCorrectness);\r\n  };\r\n\r\n  /* Отправить данные новой карточки на сервер */\r\n  postCard(card) {\r\n    return fetch(`${this._serverUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._getHeaders(),\r\n      body: JSON.stringify({\r\n        name: card.name,\r\n        link: card.link,\r\n      })\r\n    })\r\n    .then(this._checkCorrectness);\r\n  };\r\n\r\n  /* Удалить карточку с сервера */\r\n  deleteCard(id) {\r\n    return fetch(`${this._serverUrl}/cards/${id}`, {\r\n    method: 'DELETE',\r\n    headers: this._getHeaders(),\r\n    })\r\n    .then(this._checkCorrectness);\r\n  };\r\n\r\n  /* Поставить лайк */\r\n  putLike(id) {\r\n    return fetch(`${this._serverUrl}/cards/${id}/likes`, {\r\n    method: 'PUT',\r\n    headers: this._getHeaders(),\r\n    })\r\n    .then(this._checkCorrectness);\r\n  };\r\n\r\n  /* Удалить лайк */\r\n  deleteLike(id) {\r\n    return fetch(`${this._serverUrl}/cards/${id}/likes`, {\r\n    method: 'DELETE',\r\n    headers: this._getHeaders(),\r\n    })\r\n    .then(this._checkCorrectness);\r\n  };\r\n};\r\n\r\nconst api = new Api({\r\n  serverUrl: 'https://domain.ianapylaeva.bcknd.nomoredomains.xyz',\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default api;\r\n"]},"metadata":{},"sourceType":"module"}